name: PR Auto-Link to Issue

on:
  pull_request:
    types: [opened, edited, reopened]

jobs:
  auto-link:
    runs-on: ubuntu-latest
    
    steps:
      - name: Check PR for Issue Reference
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            const title = pr.title || '';
            
            // Check for closing keywords
            const closingKeywords = ['closes', 'fixes', 'resolves', 'close', 'fix', 'resolve'];
            const issuePattern = new RegExp(`(${closingKeywords.join('|')})\\s+#(\\d+)`, 'gi');
            
            let hasClosingKeyword = false;
            let linkedIssues = [];
            let match;
            
            while ((match = issuePattern.exec(body)) !== null) {
              hasClosingKeyword = true;
              linkedIssues.push(match[2]);
            }
            
            if (!hasClosingKeyword) {
              // Try to find issue number without keyword
              const simpleIssuePattern = /#(\d+)/g;
              const matches = [...body.matchAll(simpleIssuePattern)];
              
              if (matches.length > 0) {
                // Found issue reference but no closing keyword
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `⚠️ **Missing Closing Keyword**
                  
            Found issue reference(s) but no closing keyword.
            
            Please add one of these keywords before the issue number:
            - \`Closes #123\`
            - \`Fixes #123\`
            - \`Resolves #123\`
            
            This ensures the issue is automatically closed when the PR is merged.`
                });
              } else {
                // No issue reference at all
                await github.rest.issues.createComment({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: pr.number,
                  body: `ℹ️ **No Issue Linked**
                  
            This PR doesn't reference any issue.
            
            If this PR solves an issue, please add:
            \`\`\`
            Closes #[issue-number]
            \`\`\`
            
            to the PR description.`
                });
              }
            } else {
              // Has proper closing keyword
              console.log(`✅ PR properly linked to issue(s): ${linkedIssues.join(', ')}`);
              
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr.number,
                body: `✅ **Issue Link Verified**
                
            This PR is properly linked and will close issue(s): ${linkedIssues.map(i => `#${i}`).join(', ')} when merged.`
              });
            }

      - name: Label PR Based on Linked Issues
        uses: actions/github-script@v7
        with:
          script: |
            const pr = context.payload.pull_request;
            const body = pr.body || '';
            
            // Extract issue numbers
            const issueNumbers = [...body.matchAll(/#(\d+)/g)].map(m => m[1]);
            
            if (issueNumbers.length === 0) return;
            
            // Fetch linked issues and copy their labels to PR
            for (const issueNumber of issueNumbers) {
              try {
                const issue = await github.rest.issues.get({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  issue_number: parseInt(issueNumber)
                });
                
                const issueLabels = issue.data.labels.map(l => l.name);
                const prLabels = pr.labels.map(l => l.name);
                
                // Add issue labels to PR (filter out auto-created)
                const labelsToAdd = issueLabels
                  .filter(l => !l.includes('auto-created'))
                  .filter(l => !prLabels.includes(l));
                
                if (labelsToAdd.length > 0) {
                  await github.rest.issues.addLabels({
                    owner: context.repo.owner,
                    repo: context.repo.repo,
                    issue_number: pr.number,
                    labels: labelsToAdd
                  });
                  
                  console.log(`Added labels from issue #${issueNumber}: ${labelsToAdd.join(', ')}`);
                }
              } catch (error) {
                console.log(`Could not fetch issue #${issueNumber}: ${error.message}`);
              }
            }

