name: Create Sprint Issues

on:
  create:
  workflow_dispatch:
    inputs:
      sprint_number:
        description: 'Sprint number (e.g., 3)'
        required: false
        default: ''

jobs:
  create-issues:
    runs-on: ubuntu-latest
    permissions:
      issues: write
    if: |
      (github.event_name == 'create' && github.ref_type == 'branch' && startsWith(github.ref_name, 'sprint/')) ||
      (github.event_name == 'workflow_dispatch' && github.event.inputs.sprint_number != '')
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4
    
    - name: Extract Sprint Number
      id: sprint
      run: |
        if [ "${{ github.event_name }}" = "create" ]; then
          # Extract from branch name: sprint/3 or sprint/sprint-3
          BRANCH_NAME="${{ github.ref_name }}"
          SPRINT_NUM=$(echo "$BRANCH_NAME" | grep -oP 'sprint[/-]?\K\d+' || echo "")
          if [ -z "$SPRINT_NUM" ]; then
            echo "Error: Could not extract sprint number from branch name: $BRANCH_NAME"
            exit 1
          fi
          echo "number=$SPRINT_NUM" >> $GITHUB_OUTPUT
          echo "Detected sprint number from branch: $SPRINT_NUM"
        else
          # Manual workflow dispatch
          echo "number=${{ github.event.inputs.sprint_number }}" >> $GITHUB_OUTPUT
          echo "Using manual sprint number: ${{ github.event.inputs.sprint_number }}"
        fi
    
    - name: Create Issue US-14 - Multi-Version Support
      id: issue-us14
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[US-14] Multi-Version Minecraft Support',
            body: `**Is your feature request related to a problem?**
          Currently, the Docker template only supports the latest Minecraft version by default. Users need the ability to specify different versions (1.20.1, 1.19.4, etc.) and server types (PAPER, SPIGOT, FORGE, FABRIC) to meet different player requirements.
          
          **Describe the solution you'd like**
          Add comprehensive support for multiple Minecraft versions and server types through environment variables.
          
          **User Story**
          Como administrador
          Quiero poder elegir diferentes versiones de Minecraft
          Para soportar diferentes necesidades de jugadores
          
          **Acceptance Criteria**
          - [ ] Variable VERSION soporta versiones específicas (1.20.1, 1.19.4, etc)
          - [ ] Variable TYPE soporta PAPER, SPIGOT, FORGE, FABRIC
          - [ ] Documentación de versiones compatibles
          - [ ] Ejemplos en docker-compose para diferentes versiones
          - [ ] Testing de al menos 3 versiones diferentes
          
          **Tasks**
          - [ ] Actualizar .env.example con opciones de VERSION
          - [ ] Documentar tipos de servidor compatibles
          - [ ] Crear docker-compose.versions.yml con ejemplos
          - [ ] Añadir testing para diferentes versiones
          - [ ] Actualizar README con guía de versiones
          
          **Story Points:** 5
          **Sprint:** Sprint ${{ steps.sprint.outputs.number }}
          **Priority:** High
          
          **Additional context**
          Esto permitirá a los usuarios del template crear servidores con la versión exacta que necesitan, facilitando la compatibilidad con mods y plugins específicos.`,
            labels: ['enhancement', 'sprint-${{ inputs.sprint_number }}', 'priority-high'],
            assignees: ['gastonfr24']
          });
          console.log(`Created issue US-14: #${issue.data.number}`);
          return issue.data.number;
    
    - name: Create Issue US-15 - Modpack Support
      id: issue-us15
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[US-15] Automated Modpack Installation Support',
            body: `**Is your feature request related to a problem?**
          Installing modpacks manually is complex and error-prone. Users need an automated way to install modpacks from CurseForge and FTB.
          
          **Describe the solution you'd like**
          Add support for automatic modpack installation through environment variables, leveraging itzg/minecraft-server's built-in modpack support.
          
          **User Story**
          Como administrador
          Quiero poder instalar modpacks automáticamente
          Para facilitar la configuración de servidores modded
          
          **Acceptance Criteria**
          - [ ] Soporte para CurseForge modpacks
          - [ ] Soporte para FTB modpacks
          - [ ] Variable MODPACK_URL o CURSEFORGE_FILE
          - [ ] Documentación de instalación de modpacks
          - [ ] Ejemplo funcional con modpack popular
          
          **Tasks**
          - [ ] Investigar itzg/minecraft-server modpack support
          - [ ] Añadir variables para modpacks en .env.example
          - [ ] Crear docker-compose.modded.yml
          - [ ] Documentar proceso de instalación
          - [ ] Testing con modpack popular (ej: All The Mods 9)
          - [ ] Añadir troubleshooting para mods
          
          **Story Points:** 8
          **Sprint:** Sprint ${{ steps.sprint.outputs.number }}
          **Priority:** High
          
          **Additional context**
          Popular modpacks: All The Mods 9, FTB StoneBlock 3, RLCraft, etc.`,
            labels: ['enhancement', 'sprint-${{ steps.sprint.outputs.number }}', 'priority-high'],
            assignees: ['gastonfr24']
          });
          console.log(`Created issue US-15: #${issue.data.number}`);
          return issue.data.number;
    
    - name: Create Issue US-16 - Advanced Networking
      id: issue-us16
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[US-16] Multi-Server Networking & Proxy Preparation',
            body: `**Is your feature request related to a problem?**
          For a future API to manage multiple servers, proper networking setup is needed, including proxy support for connecting multiple servers together.
          
          **Describe the solution you'd like**
          Configure Docker networking to support multi-server setups with BungeeCord/Velocity proxy, preparing the template for external API integration.
          
          **User Story**
          Como desarrollador de API
          Quiero que los servidores puedan comunicarse entre sí
          Para preparar integración con proxy (BungeeCord/Velocity)
          
          **Acceptance Criteria**
          - [ ] Docker network configurado correctamente
          - [ ] Variables para configurar proxy mode
          - [ ] Documentación de networking
          - [ ] Ejemplo con 3 servidores + proxy
          - [ ] Guía de integración para API externa
          
          **Tasks**
          - [ ] Crear docker-compose.proxy.yml con Velocity/BungeeCord
          - [ ] Configurar variables para proxy mode
          - [ ] Documentar networking entre servidores
          - [ ] Crear guía para desarrolladores de API
          - [ ] Testing de conectividad entre servidores
          
          **Story Points:** 5
          **Sprint:** Sprint ${{ steps.sprint.outputs.number }}
          **Priority:** Medium
          
          **Additional context**
          This prepares the Docker template for integration with an external API (separate project) that will manage server lifecycle.`,
            labels: ['enhancement', 'sprint-${{ steps.sprint.outputs.number }}', 'priority-medium'],
            assignees: ['gastonfr24']
          });
          console.log(`Created issue US-16: #${issue.data.number}`);
          return issue.data.number;
    
    - name: Create Issue US-17 - Advanced Env Variables
      id: issue-us17
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[US-17] Advanced Environment Variables Configuration',
            body: `**Is your feature request related to a problem?**
          Users need more granular control over server configuration through environment variables (plugins, mods, whitelist, ops).
          
          **Describe the solution you'd like**
          Expand environment variable support to cover common configuration needs like automatic plugin installation, whitelist management, and operator assignment.
          
          **User Story**
          Como administrador
          Quiero más control sobre la configuración del servidor
          Para optimizar para casos de uso específicos
          
          **Acceptance Criteria**
          - [ ] Nuevas variables documentadas en .env.example
          - [ ] Soporte para PLUGINS automáticos
          - [ ] Soporte para MODS automáticos
          - [ ] Configuración de whitelist via variable
          - [ ] OPS automáticos via variable
          
          **Tasks**
          - [ ] Añadir variables PLUGINS, MODS, WHITELIST, OPS
          - [ ] Documentar cada variable en .env.example
          - [ ] Crear ejemplos de uso
          - [ ] Testing de configuración automática
          - [ ] Actualizar README
          
          **Story Points:** 3
          **Sprint:** Sprint ${{ steps.sprint.outputs.number }}
          **Priority:** Medium
          
          **Additional context**
          Examples:
          - PLUGINS="EssentialsX,Vault,LuckPerms"
          - OPS="player1,player2"
          - WHITELIST="player1,player2,player3"`,
            labels: ['enhancement', 'sprint-${{ steps.sprint.outputs.number }}', 'priority-medium'],
            assignees: ['gastonfr24']
          });
          console.log(`Created issue US-17: #${issue.data.number}`);
          return issue.data.number;
    
    - name: Create Issue US-18 - Advanced Documentation
      id: issue-us18
      uses: actions/github-script@v7
      with:
        script: |
          const issue = await github.rest.issues.create({
            owner: context.repo.owner,
            repo: context.repo.repo,
            title: '[US-18] Complete Advanced Documentation',
            body: `**Is your feature request related to a problem?**
          New users struggle to understand all capabilities and configuration options. Documentation needs to be comprehensive and beginner-friendly.
          
          **Describe the solution you'd like**
          Create comprehensive documentation covering all use cases, examples, FAQ, and integration guides.
          
          **User Story**
          Como nuevo usuario
          Quiero documentación completa y clara
          Para poder usar el proyecto sin problemas
          
          **Acceptance Criteria**
          - [ ] README.md completo con todos los casos de uso
          - [ ] Guía de troubleshooting expandida
          - [ ] Ejemplos de configuraciones comunes
          - [ ] FAQ section
          - [ ] Video tutorial (opcional)
          
          **Tasks**
          - [ ] Expandir README.md con casos de uso reales
          - [ ] Crear docs/EXAMPLES.md con configuraciones comunes
          - [ ] Crear docs/FAQ.md
          - [ ] Mejorar TROUBLESHOOTING.md
          - [ ] Añadir badges al README
          - [ ] Crear docs/INTEGRATION.md para API developers
          
          **Story Points:** 5
          **Sprint:** Sprint ${{ steps.sprint.outputs.number }}
          **Priority:** Low
          
          **Additional context**
          Good documentation is critical for project adoption. Focus on clarity and real-world examples.`,
            labels: ['documentation', 'sprint-${{ steps.sprint.outputs.number }}', 'priority-low'],
            assignees: ['gastonfr24']
          });
          console.log(`Created issue US-18: #${issue.data.number}`);
          return issue.data.number;
    
    - name: Update Sprint Document with Issue Numbers
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          const sprintNum = '${{ steps.sprint.outputs.number }}';
          const sprintFile = `docs/sprints/SPRINT_0${sprintNum}.md`;
          
          // Get Issue numbers from previous steps
          const issueUS14 = '${{ steps.issue-us14.outputs.result }}';
          const issueUS15 = '${{ steps.issue-us15.outputs.result }}';
          const issueUS16 = '${{ steps.issue-us16.outputs.result }}';
          const issueUS17 = '${{ steps.issue-us17.outputs.result }}';
          const issueUS18 = '${{ steps.issue-us18.outputs.result }}';
          
          console.log('Issue Numbers:');
          console.log(`  US-14: #${issueUS14}`);
          console.log(`  US-15: #${issueUS15}`);
          console.log(`  US-16: #${issueUS16}`);
          console.log(`  US-17: #${issueUS17}`);
          console.log(`  US-18: #${issueUS18}`);
          
          // Read sprint file
          let content = fs.readFileSync(sprintFile, 'utf8');
          
          // Update with Issue numbers
          content = content.replace(
            /#### US-14: Soporte Multi-Version de Minecraft\n\*\*Issue:\*\* \(Pending creation\)/,
            `#### US-14: Soporte Multi-Version de Minecraft\n**Issue:** #${issueUS14}`
          );
          content = content.replace(
            /#### US-15: Soporte para Modpacks\n\*\*Issue:\*\* \(Pending creation\)/,
            `#### US-15: Soporte para Modpacks\n**Issue:** #${issueUS15}`
          );
          content = content.replace(
            /#### US-16: Networking Multi-Servidor\n\*\*Issue:\*\* \(Pending creation\)/,
            `#### US-16: Networking Multi-Servidor\n**Issue:** #${issueUS16}`
          );
          content = content.replace(
            /#### US-17: Variables de Entorno Avanzadas\n\*\*Issue:\*\* \(Pending creation\)/,
            `#### US-17: Variables de Entorno Avanzadas\n**Issue:** #${issueUS17}`
          );
          content = content.replace(
            /#### US-18: Documentación Avanzada\n\*\*Issue:\*\* \(Pending creation\)/,
            `#### US-18: Documentación Avanzada\n**Issue:** #${issueUS18}`
          );
          
          // Write back
          fs.writeFileSync(sprintFile, content);
          console.log(`Updated ${sprintFile} with Issue numbers`);
    
    - name: Commit and Push Changes
      run: |
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        git add docs/sprints/SPRINT_0${{ steps.sprint.outputs.number }}.md
        git commit -m "docs(sprint${{ steps.sprint.outputs.number }}): add Issue numbers automatically

Issues created:
- US-14: #${{ steps.issue-us14.outputs.result }}
- US-15: #${{ steps.issue-us15.outputs.result }}
- US-16: #${{ steps.issue-us16.outputs.result }}
- US-17: #${{ steps.issue-us17.outputs.result }}
- US-18: #${{ steps.issue-us18.outputs.result }}"
        git push
    
    - name: Summary
      run: |
        echo "✅ Successfully created 5 Issues for Sprint ${{ steps.sprint.outputs.number }}"
        echo ""
        echo "Issues created:"
        echo "  - US-14: #${{ steps.issue-us14.outputs.result }} - Multi-Version Minecraft Support"
        echo "  - US-15: #${{ steps.issue-us15.outputs.result }} - Automated Modpack Installation Support"
        echo "  - US-16: #${{ steps.issue-us16.outputs.result }} - Multi-Server Networking & Proxy Preparation"
        echo "  - US-17: #${{ steps.issue-us17.outputs.result }} - Advanced Environment Variables Configuration"
        echo "  - US-18: #${{ steps.issue-us18.outputs.result }} - Complete Advanced Documentation"
        echo ""
        echo "✅ Sprint document updated automatically with Issue numbers"
        echo ""
        echo "Next steps:"
        echo "  1. Check the Issues tab in GitHub"
        echo "  2. Sprint doc already updated - ready to start development!"

